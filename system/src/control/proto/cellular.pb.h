/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Mon Jun 10 21:00:54 2019. */

#ifndef PB_PARTICLE_CTRL_CELLULAR_CELLULAR_PB_H_INCLUDED
#define PB_PARTICLE_CTRL_CELLULAR_CELLULAR_PB_H_INCLUDED
#include <pb.h>

#include "extensions.pb.h"

#include "common.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _particle_ctrl_cellular_SimType {
    particle_ctrl_cellular_SimType_INVALID_SIM_TYPE = 0,
    particle_ctrl_cellular_SimType_INTERNAL = 1,
    particle_ctrl_cellular_SimType_EXTERNAL = 2
} particle_ctrl_cellular_SimType;
#define _particle_ctrl_cellular_SimType_MIN particle_ctrl_cellular_SimType_INVALID_SIM_TYPE
#define _particle_ctrl_cellular_SimType_MAX particle_ctrl_cellular_SimType_EXTERNAL
#define _particle_ctrl_cellular_SimType_ARRAYSIZE ((particle_ctrl_cellular_SimType)(particle_ctrl_cellular_SimType_EXTERNAL+1))

/* Struct definitions */
typedef struct _particle_ctrl_cellular_GetActiveSimRequest {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_cellular_GetActiveSimRequest) */
} particle_ctrl_cellular_GetActiveSimRequest;

typedef struct _particle_ctrl_cellular_GetIccidReply {
    pb_callback_t iccid;
/* @@protoc_insertion_point(struct:particle_ctrl_cellular_GetIccidReply) */
} particle_ctrl_cellular_GetIccidReply;

typedef struct _particle_ctrl_cellular_GetIccidRequest {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_cellular_GetIccidRequest) */
} particle_ctrl_cellular_GetIccidRequest;

typedef struct _particle_ctrl_cellular_SetAccessPointReply {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_cellular_SetAccessPointReply) */
} particle_ctrl_cellular_SetAccessPointReply;

typedef struct _particle_ctrl_cellular_SetActiveSimReply {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_cellular_SetActiveSimReply) */
} particle_ctrl_cellular_SetActiveSimReply;

typedef struct _particle_ctrl_cellular_AccessPoint {
    pb_callback_t apn;
    pb_callback_t user;
    pb_callback_t password;
    bool use_defaults;
/* @@protoc_insertion_point(struct:particle_ctrl_cellular_AccessPoint) */
} particle_ctrl_cellular_AccessPoint;

typedef struct _particle_ctrl_cellular_GetAccessPointRequest {
    particle_ctrl_cellular_SimType sim_type;
/* @@protoc_insertion_point(struct:particle_ctrl_cellular_GetAccessPointRequest) */
} particle_ctrl_cellular_GetAccessPointRequest;

typedef struct _particle_ctrl_cellular_GetActiveSimReply {
    particle_ctrl_cellular_SimType sim_type;
/* @@protoc_insertion_point(struct:particle_ctrl_cellular_GetActiveSimReply) */
} particle_ctrl_cellular_GetActiveSimReply;

typedef struct _particle_ctrl_cellular_SetActiveSimRequest {
    particle_ctrl_cellular_SimType sim_type;
/* @@protoc_insertion_point(struct:particle_ctrl_cellular_SetActiveSimRequest) */
} particle_ctrl_cellular_SetActiveSimRequest;

typedef struct _particle_ctrl_cellular_GetAccessPointReply {
    particle_ctrl_cellular_AccessPoint access_point;
/* @@protoc_insertion_point(struct:particle_ctrl_cellular_GetAccessPointReply) */
} particle_ctrl_cellular_GetAccessPointReply;

typedef struct _particle_ctrl_cellular_SetAccessPointRequest {
    particle_ctrl_cellular_SimType sim_type;
    particle_ctrl_cellular_AccessPoint access_point;
/* @@protoc_insertion_point(struct:particle_ctrl_cellular_SetAccessPointRequest) */
} particle_ctrl_cellular_SetAccessPointRequest;

/* Default values for struct fields */

/* Initializer values for message structs */
#define particle_ctrl_cellular_AccessPoint_init_default {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0}
#define particle_ctrl_cellular_SetAccessPointRequest_init_default {(particle_ctrl_cellular_SimType)0, particle_ctrl_cellular_AccessPoint_init_default}
#define particle_ctrl_cellular_SetAccessPointReply_init_default {0}
#define particle_ctrl_cellular_GetAccessPointRequest_init_default {(particle_ctrl_cellular_SimType)0}
#define particle_ctrl_cellular_GetAccessPointReply_init_default {particle_ctrl_cellular_AccessPoint_init_default}
#define particle_ctrl_cellular_SetActiveSimRequest_init_default {(particle_ctrl_cellular_SimType)0}
#define particle_ctrl_cellular_SetActiveSimReply_init_default {0}
#define particle_ctrl_cellular_GetActiveSimRequest_init_default {0}
#define particle_ctrl_cellular_GetActiveSimReply_init_default {(particle_ctrl_cellular_SimType)0}
#define particle_ctrl_cellular_GetIccidRequest_init_default {0}
#define particle_ctrl_cellular_GetIccidReply_init_default {{{NULL}, NULL}}
#define particle_ctrl_cellular_AccessPoint_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0}
#define particle_ctrl_cellular_SetAccessPointRequest_init_zero {(particle_ctrl_cellular_SimType)0, particle_ctrl_cellular_AccessPoint_init_zero}
#define particle_ctrl_cellular_SetAccessPointReply_init_zero {0}
#define particle_ctrl_cellular_GetAccessPointRequest_init_zero {(particle_ctrl_cellular_SimType)0}
#define particle_ctrl_cellular_GetAccessPointReply_init_zero {particle_ctrl_cellular_AccessPoint_init_zero}
#define particle_ctrl_cellular_SetActiveSimRequest_init_zero {(particle_ctrl_cellular_SimType)0}
#define particle_ctrl_cellular_SetActiveSimReply_init_zero {0}
#define particle_ctrl_cellular_GetActiveSimRequest_init_zero {0}
#define particle_ctrl_cellular_GetActiveSimReply_init_zero {(particle_ctrl_cellular_SimType)0}
#define particle_ctrl_cellular_GetIccidRequest_init_zero {0}
#define particle_ctrl_cellular_GetIccidReply_init_zero {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define particle_ctrl_cellular_GetIccidReply_iccid_tag 1
#define particle_ctrl_cellular_AccessPoint_apn_tag 1
#define particle_ctrl_cellular_AccessPoint_user_tag 2
#define particle_ctrl_cellular_AccessPoint_password_tag 3
#define particle_ctrl_cellular_AccessPoint_use_defaults_tag 4
#define particle_ctrl_cellular_GetAccessPointRequest_sim_type_tag 1
#define particle_ctrl_cellular_GetActiveSimReply_sim_type_tag 1
#define particle_ctrl_cellular_SetActiveSimRequest_sim_type_tag 1
#define particle_ctrl_cellular_GetAccessPointReply_access_point_tag 1
#define particle_ctrl_cellular_SetAccessPointRequest_sim_type_tag 1
#define particle_ctrl_cellular_SetAccessPointRequest_access_point_tag 2

/* Struct field encoding specification for nanopb */
extern const pb_field_t particle_ctrl_cellular_AccessPoint_fields[5];
extern const pb_field_t particle_ctrl_cellular_SetAccessPointRequest_fields[3];
extern const pb_field_t particle_ctrl_cellular_SetAccessPointReply_fields[1];
extern const pb_field_t particle_ctrl_cellular_GetAccessPointRequest_fields[2];
extern const pb_field_t particle_ctrl_cellular_GetAccessPointReply_fields[2];
extern const pb_field_t particle_ctrl_cellular_SetActiveSimRequest_fields[2];
extern const pb_field_t particle_ctrl_cellular_SetActiveSimReply_fields[1];
extern const pb_field_t particle_ctrl_cellular_GetActiveSimRequest_fields[1];
extern const pb_field_t particle_ctrl_cellular_GetActiveSimReply_fields[2];
extern const pb_field_t particle_ctrl_cellular_GetIccidRequest_fields[1];
extern const pb_field_t particle_ctrl_cellular_GetIccidReply_fields[2];

/* Maximum encoded size of messages (where known) */
/* particle_ctrl_cellular_AccessPoint_size depends on runtime parameters */
#define particle_ctrl_cellular_SetAccessPointRequest_size (8 + particle_ctrl_cellular_AccessPoint_size)
#define particle_ctrl_cellular_SetAccessPointReply_size 0
#define particle_ctrl_cellular_GetAccessPointRequest_size 2
#define particle_ctrl_cellular_GetAccessPointReply_size (6 + particle_ctrl_cellular_AccessPoint_size)
#define particle_ctrl_cellular_SetActiveSimRequest_size 2
#define particle_ctrl_cellular_SetActiveSimReply_size 0
#define particle_ctrl_cellular_GetActiveSimRequest_size 0
#define particle_ctrl_cellular_GetActiveSimReply_size 2
#define particle_ctrl_cellular_GetIccidRequest_size 0
/* particle_ctrl_cellular_GetIccidReply_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define CELLULAR_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
