/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Mon Jun 10 21:00:54 2019. */

#ifndef PB_PARTICLE_CTRL_STORAGE_PB_H_INCLUDED
#define PB_PARTICLE_CTRL_STORAGE_PB_H_INCLUDED
#include <pb.h>

#include "extensions.pb.h"

#include "common.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _particle_ctrl_StorageType {
    particle_ctrl_StorageType_INVALID_STORAGE = 0,
    particle_ctrl_StorageType_INTERNAL = 1
} particle_ctrl_StorageType;
#define _particle_ctrl_StorageType_MIN particle_ctrl_StorageType_INVALID_STORAGE
#define _particle_ctrl_StorageType_MAX particle_ctrl_StorageType_INTERNAL
#define _particle_ctrl_StorageType_ARRAYSIZE ((particle_ctrl_StorageType)(particle_ctrl_StorageType_INTERNAL+1))

typedef enum _particle_ctrl_SectionType {
    particle_ctrl_SectionType_INVALID_SECTION = 0,
    particle_ctrl_SectionType_FIRMWARE = 1,
    particle_ctrl_SectionType_OTA_BACKUP = 2,
    particle_ctrl_SectionType_FACTORY_BACKUP = 3,
    particle_ctrl_SectionType_CONFIG = 4,
    particle_ctrl_SectionType_EEPROM = 5
} particle_ctrl_SectionType;
#define _particle_ctrl_SectionType_MIN particle_ctrl_SectionType_INVALID_SECTION
#define _particle_ctrl_SectionType_MAX particle_ctrl_SectionType_EEPROM
#define _particle_ctrl_SectionType_ARRAYSIZE ((particle_ctrl_SectionType)(particle_ctrl_SectionType_EEPROM+1))

typedef enum _particle_ctrl_FirmwareModuleType {
    particle_ctrl_FirmwareModuleType_INVALID_FIRMWARE_MODULE = 0,
    particle_ctrl_FirmwareModuleType_BOOTLOADER = 1,
    particle_ctrl_FirmwareModuleType_SYSTEM_PART = 2,
    particle_ctrl_FirmwareModuleType_USER_PART = 3,
    particle_ctrl_FirmwareModuleType_MONO_FIRMWARE = 4,
    particle_ctrl_FirmwareModuleType_NCP_FIRMWARE = 5,
    particle_ctrl_FirmwareModuleType_RADIO_STACK = 6
} particle_ctrl_FirmwareModuleType;
#define _particle_ctrl_FirmwareModuleType_MIN particle_ctrl_FirmwareModuleType_INVALID_FIRMWARE_MODULE
#define _particle_ctrl_FirmwareModuleType_MAX particle_ctrl_FirmwareModuleType_RADIO_STACK
#define _particle_ctrl_FirmwareModuleType_ARRAYSIZE ((particle_ctrl_FirmwareModuleType)(particle_ctrl_FirmwareModuleType_RADIO_STACK+1))

typedef enum _particle_ctrl_FirmwareModuleValidityFlag {
    particle_ctrl_FirmwareModuleValidityFlag_NO_VALIDATION_ERRORS = 0,
    particle_ctrl_FirmwareModuleValidityFlag_INTEGRITY_CHECK_FAILED = 1,
    particle_ctrl_FirmwareModuleValidityFlag_DEPENDENCY_CHECK_FAILED = 2
} particle_ctrl_FirmwareModuleValidityFlag;
#define _particle_ctrl_FirmwareModuleValidityFlag_MIN particle_ctrl_FirmwareModuleValidityFlag_NO_VALIDATION_ERRORS
#define _particle_ctrl_FirmwareModuleValidityFlag_MAX particle_ctrl_FirmwareModuleValidityFlag_DEPENDENCY_CHECK_FAILED
#define _particle_ctrl_FirmwareModuleValidityFlag_ARRAYSIZE ((particle_ctrl_FirmwareModuleValidityFlag)(particle_ctrl_FirmwareModuleValidityFlag_DEPENDENCY_CHECK_FAILED+1))

typedef enum _particle_ctrl_SectionFlag {
    particle_ctrl_SectionFlag_NO_SECTION_FLAGS = 0,
    particle_ctrl_SectionFlag_CAN_READ = 1,
    particle_ctrl_SectionFlag_CAN_WRITE = 2,
    particle_ctrl_SectionFlag_CAN_CLEAR = 4,
    particle_ctrl_SectionFlag_CAN_GET_SIZE = 8,
    particle_ctrl_SectionFlag_NEED_CLEAR = 16
} particle_ctrl_SectionFlag;
#define _particle_ctrl_SectionFlag_MIN particle_ctrl_SectionFlag_NO_SECTION_FLAGS
#define _particle_ctrl_SectionFlag_MAX particle_ctrl_SectionFlag_NEED_CLEAR
#define _particle_ctrl_SectionFlag_ARRAYSIZE ((particle_ctrl_SectionFlag)(particle_ctrl_SectionFlag_NEED_CLEAR+1))

typedef enum _particle_ctrl_FileFormat {
    particle_ctrl_FileFormat_BIN = 0,
    particle_ctrl_FileFormat_MINIZ = 1
} particle_ctrl_FileFormat;
#define _particle_ctrl_FileFormat_MIN particle_ctrl_FileFormat_BIN
#define _particle_ctrl_FileFormat_MAX particle_ctrl_FileFormat_MINIZ
#define _particle_ctrl_FileFormat_ARRAYSIZE ((particle_ctrl_FileFormat)(particle_ctrl_FileFormat_MINIZ+1))

/* Struct definitions */
typedef struct _particle_ctrl_CancelFirmwareUpdateReply {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_CancelFirmwareUpdateReply) */
} particle_ctrl_CancelFirmwareUpdateReply;

typedef struct _particle_ctrl_CancelFirmwareUpdateRequest {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_CancelFirmwareUpdateRequest) */
} particle_ctrl_CancelFirmwareUpdateRequest;

typedef struct _particle_ctrl_ClearSectionDataReply {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_ClearSectionDataReply) */
} particle_ctrl_ClearSectionDataReply;

typedef struct _particle_ctrl_DescribeStorageReply {
    pb_callback_t storage;
/* @@protoc_insertion_point(struct:particle_ctrl_DescribeStorageReply) */
} particle_ctrl_DescribeStorageReply;

typedef struct _particle_ctrl_DescribeStorageRequest {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_DescribeStorageRequest) */
} particle_ctrl_DescribeStorageRequest;

typedef struct _particle_ctrl_FinishFirmwareUpdateReply {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_FinishFirmwareUpdateReply) */
} particle_ctrl_FinishFirmwareUpdateReply;

typedef struct _particle_ctrl_FirmwareUpdateDataReply {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_FirmwareUpdateDataReply) */
} particle_ctrl_FirmwareUpdateDataReply;

typedef struct _particle_ctrl_FirmwareUpdateDataRequest {
    pb_callback_t data;
/* @@protoc_insertion_point(struct:particle_ctrl_FirmwareUpdateDataRequest) */
} particle_ctrl_FirmwareUpdateDataRequest;

typedef struct _particle_ctrl_GetModuleInfoReply {
    pb_callback_t modules;
/* @@protoc_insertion_point(struct:particle_ctrl_GetModuleInfoReply) */
} particle_ctrl_GetModuleInfoReply;

typedef struct _particle_ctrl_GetModuleInfoRequest {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_GetModuleInfoRequest) */
} particle_ctrl_GetModuleInfoRequest;

typedef struct _particle_ctrl_ReadSectionDataReply {
    pb_callback_t data;
/* @@protoc_insertion_point(struct:particle_ctrl_ReadSectionDataReply) */
} particle_ctrl_ReadSectionDataReply;

typedef struct _particle_ctrl_WriteSectionDataReply {
    char dummy_field;
/* @@protoc_insertion_point(struct:particle_ctrl_WriteSectionDataReply) */
} particle_ctrl_WriteSectionDataReply;

typedef struct _particle_ctrl_ClearSectionDataRequest {
    uint32_t storage;
    uint32_t section;
/* @@protoc_insertion_point(struct:particle_ctrl_ClearSectionDataRequest) */
} particle_ctrl_ClearSectionDataRequest;

typedef struct _particle_ctrl_DescribeStorageReply_Section_FirmwareModule {
    particle_ctrl_FirmwareModuleType type;
    uint32_t index;
/* @@protoc_insertion_point(struct:particle_ctrl_DescribeStorageReply_Section_FirmwareModule) */
} particle_ctrl_DescribeStorageReply_Section_FirmwareModule;

typedef struct _particle_ctrl_DescribeStorageReply_Storage {
    particle_ctrl_StorageType type;
    uint32_t flags;
    pb_callback_t sections;
/* @@protoc_insertion_point(struct:particle_ctrl_DescribeStorageReply_Storage) */
} particle_ctrl_DescribeStorageReply_Storage;

typedef struct _particle_ctrl_FinishFirmwareUpdateRequest {
    bool validate_only;
/* @@protoc_insertion_point(struct:particle_ctrl_FinishFirmwareUpdateRequest) */
} particle_ctrl_FinishFirmwareUpdateRequest;

typedef struct _particle_ctrl_GetModuleInfoReply_Dependency {
    particle_ctrl_FirmwareModuleType type;
    uint32_t index;
    uint32_t version;
/* @@protoc_insertion_point(struct:particle_ctrl_GetModuleInfoReply_Dependency) */
} particle_ctrl_GetModuleInfoReply_Dependency;

typedef struct _particle_ctrl_GetModuleInfoReply_Module {
    particle_ctrl_FirmwareModuleType type;
    uint32_t index;
    uint32_t version;
    uint32_t size;
    uint32_t validity;
    pb_callback_t dependencies;
/* @@protoc_insertion_point(struct:particle_ctrl_GetModuleInfoReply_Module) */
} particle_ctrl_GetModuleInfoReply_Module;

typedef struct _particle_ctrl_GetSectionDataSizeReply {
    uint32_t size;
/* @@protoc_insertion_point(struct:particle_ctrl_GetSectionDataSizeReply) */
} particle_ctrl_GetSectionDataSizeReply;

typedef struct _particle_ctrl_GetSectionDataSizeRequest {
    uint32_t storage;
    uint32_t section;
/* @@protoc_insertion_point(struct:particle_ctrl_GetSectionDataSizeRequest) */
} particle_ctrl_GetSectionDataSizeRequest;

typedef struct _particle_ctrl_ReadSectionDataRequest {
    uint32_t storage;
    uint32_t section;
    uint32_t offset;
    uint32_t size;
/* @@protoc_insertion_point(struct:particle_ctrl_ReadSectionDataRequest) */
} particle_ctrl_ReadSectionDataRequest;

typedef struct _particle_ctrl_StartFirmwareUpdateReply {
    uint32_t chunk_size;
/* @@protoc_insertion_point(struct:particle_ctrl_StartFirmwareUpdateReply) */
} particle_ctrl_StartFirmwareUpdateReply;

typedef struct _particle_ctrl_StartFirmwareUpdateRequest {
    uint32_t size;
    particle_ctrl_FileFormat format;
/* @@protoc_insertion_point(struct:particle_ctrl_StartFirmwareUpdateRequest) */
} particle_ctrl_StartFirmwareUpdateRequest;

typedef struct _particle_ctrl_WriteSectionDataRequest {
    uint32_t storage;
    uint32_t section;
    uint32_t offset;
    pb_callback_t data;
/* @@protoc_insertion_point(struct:particle_ctrl_WriteSectionDataRequest) */
} particle_ctrl_WriteSectionDataRequest;

typedef struct _particle_ctrl_DescribeStorageReply_Section {
    particle_ctrl_SectionType type;
    uint32_t size;
    uint32_t flags;
    particle_ctrl_DescribeStorageReply_Section_FirmwareModule firmware_module;
/* @@protoc_insertion_point(struct:particle_ctrl_DescribeStorageReply_Section) */
} particle_ctrl_DescribeStorageReply_Section;

/* Default values for struct fields */

/* Initializer values for message structs */
#define particle_ctrl_StartFirmwareUpdateRequest_init_default {0, (particle_ctrl_FileFormat)0}
#define particle_ctrl_StartFirmwareUpdateReply_init_default {0}
#define particle_ctrl_FinishFirmwareUpdateRequest_init_default {0}
#define particle_ctrl_FinishFirmwareUpdateReply_init_default {0}
#define particle_ctrl_CancelFirmwareUpdateRequest_init_default {0}
#define particle_ctrl_CancelFirmwareUpdateReply_init_default {0}
#define particle_ctrl_FirmwareUpdateDataRequest_init_default {{{NULL}, NULL}}
#define particle_ctrl_FirmwareUpdateDataReply_init_default {0}
#define particle_ctrl_DescribeStorageRequest_init_default {0}
#define particle_ctrl_DescribeStorageReply_init_default {{{NULL}, NULL}}
#define particle_ctrl_DescribeStorageReply_Section_init_default {(particle_ctrl_SectionType)0, 0, 0, particle_ctrl_DescribeStorageReply_Section_FirmwareModule_init_default}
#define particle_ctrl_DescribeStorageReply_Section_FirmwareModule_init_default {(particle_ctrl_FirmwareModuleType)0, 0}
#define particle_ctrl_DescribeStorageReply_Storage_init_default {(particle_ctrl_StorageType)0, 0, {{NULL}, NULL}}
#define particle_ctrl_ReadSectionDataRequest_init_default {0, 0, 0, 0}
#define particle_ctrl_ReadSectionDataReply_init_default {{{NULL}, NULL}}
#define particle_ctrl_WriteSectionDataRequest_init_default {0, 0, 0, {{NULL}, NULL}}
#define particle_ctrl_WriteSectionDataReply_init_default {0}
#define particle_ctrl_ClearSectionDataRequest_init_default {0, 0}
#define particle_ctrl_ClearSectionDataReply_init_default {0}
#define particle_ctrl_GetSectionDataSizeRequest_init_default {0, 0}
#define particle_ctrl_GetSectionDataSizeReply_init_default {0}
#define particle_ctrl_GetModuleInfoRequest_init_default {0}
#define particle_ctrl_GetModuleInfoReply_init_default {{{NULL}, NULL}}
#define particle_ctrl_GetModuleInfoReply_Dependency_init_default {(particle_ctrl_FirmwareModuleType)0, 0, 0}
#define particle_ctrl_GetModuleInfoReply_Module_init_default {(particle_ctrl_FirmwareModuleType)0, 0, 0, 0, 0, {{NULL}, NULL}}
#define particle_ctrl_StartFirmwareUpdateRequest_init_zero {0, (particle_ctrl_FileFormat)0}
#define particle_ctrl_StartFirmwareUpdateReply_init_zero {0}
#define particle_ctrl_FinishFirmwareUpdateRequest_init_zero {0}
#define particle_ctrl_FinishFirmwareUpdateReply_init_zero {0}
#define particle_ctrl_CancelFirmwareUpdateRequest_init_zero {0}
#define particle_ctrl_CancelFirmwareUpdateReply_init_zero {0}
#define particle_ctrl_FirmwareUpdateDataRequest_init_zero {{{NULL}, NULL}}
#define particle_ctrl_FirmwareUpdateDataReply_init_zero {0}
#define particle_ctrl_DescribeStorageRequest_init_zero {0}
#define particle_ctrl_DescribeStorageReply_init_zero {{{NULL}, NULL}}
#define particle_ctrl_DescribeStorageReply_Section_init_zero {(particle_ctrl_SectionType)0, 0, 0, particle_ctrl_DescribeStorageReply_Section_FirmwareModule_init_zero}
#define particle_ctrl_DescribeStorageReply_Section_FirmwareModule_init_zero {(particle_ctrl_FirmwareModuleType)0, 0}
#define particle_ctrl_DescribeStorageReply_Storage_init_zero {(particle_ctrl_StorageType)0, 0, {{NULL}, NULL}}
#define particle_ctrl_ReadSectionDataRequest_init_zero {0, 0, 0, 0}
#define particle_ctrl_ReadSectionDataReply_init_zero {{{NULL}, NULL}}
#define particle_ctrl_WriteSectionDataRequest_init_zero {0, 0, 0, {{NULL}, NULL}}
#define particle_ctrl_WriteSectionDataReply_init_zero {0}
#define particle_ctrl_ClearSectionDataRequest_init_zero {0, 0}
#define particle_ctrl_ClearSectionDataReply_init_zero {0}
#define particle_ctrl_GetSectionDataSizeRequest_init_zero {0, 0}
#define particle_ctrl_GetSectionDataSizeReply_init_zero {0}
#define particle_ctrl_GetModuleInfoRequest_init_zero {0}
#define particle_ctrl_GetModuleInfoReply_init_zero {{{NULL}, NULL}}
#define particle_ctrl_GetModuleInfoReply_Dependency_init_zero {(particle_ctrl_FirmwareModuleType)0, 0, 0}
#define particle_ctrl_GetModuleInfoReply_Module_init_zero {(particle_ctrl_FirmwareModuleType)0, 0, 0, 0, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define particle_ctrl_DescribeStorageReply_storage_tag 1
#define particle_ctrl_FirmwareUpdateDataRequest_data_tag 1
#define particle_ctrl_GetModuleInfoReply_modules_tag 1
#define particle_ctrl_ReadSectionDataReply_data_tag 1
#define particle_ctrl_ClearSectionDataRequest_storage_tag 1
#define particle_ctrl_ClearSectionDataRequest_section_tag 2
#define particle_ctrl_DescribeStorageReply_Section_FirmwareModule_type_tag 1
#define particle_ctrl_DescribeStorageReply_Section_FirmwareModule_index_tag 2
#define particle_ctrl_DescribeStorageReply_Storage_type_tag 1
#define particle_ctrl_DescribeStorageReply_Storage_flags_tag 2
#define particle_ctrl_DescribeStorageReply_Storage_sections_tag 3
#define particle_ctrl_FinishFirmwareUpdateRequest_validate_only_tag 1
#define particle_ctrl_GetModuleInfoReply_Dependency_type_tag 1
#define particle_ctrl_GetModuleInfoReply_Dependency_index_tag 2
#define particle_ctrl_GetModuleInfoReply_Dependency_version_tag 3
#define particle_ctrl_GetModuleInfoReply_Module_type_tag 1
#define particle_ctrl_GetModuleInfoReply_Module_index_tag 2
#define particle_ctrl_GetModuleInfoReply_Module_version_tag 3
#define particle_ctrl_GetModuleInfoReply_Module_size_tag 4
#define particle_ctrl_GetModuleInfoReply_Module_validity_tag 5
#define particle_ctrl_GetModuleInfoReply_Module_dependencies_tag 6
#define particle_ctrl_GetSectionDataSizeReply_size_tag 1
#define particle_ctrl_GetSectionDataSizeRequest_storage_tag 1
#define particle_ctrl_GetSectionDataSizeRequest_section_tag 2
#define particle_ctrl_ReadSectionDataRequest_storage_tag 1
#define particle_ctrl_ReadSectionDataRequest_section_tag 2
#define particle_ctrl_ReadSectionDataRequest_offset_tag 3
#define particle_ctrl_ReadSectionDataRequest_size_tag 4
#define particle_ctrl_StartFirmwareUpdateReply_chunk_size_tag 1
#define particle_ctrl_StartFirmwareUpdateRequest_size_tag 1
#define particle_ctrl_StartFirmwareUpdateRequest_format_tag 2
#define particle_ctrl_WriteSectionDataRequest_storage_tag 1
#define particle_ctrl_WriteSectionDataRequest_section_tag 2
#define particle_ctrl_WriteSectionDataRequest_offset_tag 3
#define particle_ctrl_WriteSectionDataRequest_data_tag 4
#define particle_ctrl_DescribeStorageReply_Section_type_tag 1
#define particle_ctrl_DescribeStorageReply_Section_size_tag 2
#define particle_ctrl_DescribeStorageReply_Section_flags_tag 3
#define particle_ctrl_DescribeStorageReply_Section_firmware_module_tag 4

/* Struct field encoding specification for nanopb */
extern const pb_field_t particle_ctrl_StartFirmwareUpdateRequest_fields[3];
extern const pb_field_t particle_ctrl_StartFirmwareUpdateReply_fields[2];
extern const pb_field_t particle_ctrl_FinishFirmwareUpdateRequest_fields[2];
extern const pb_field_t particle_ctrl_FinishFirmwareUpdateReply_fields[1];
extern const pb_field_t particle_ctrl_CancelFirmwareUpdateRequest_fields[1];
extern const pb_field_t particle_ctrl_CancelFirmwareUpdateReply_fields[1];
extern const pb_field_t particle_ctrl_FirmwareUpdateDataRequest_fields[2];
extern const pb_field_t particle_ctrl_FirmwareUpdateDataReply_fields[1];
extern const pb_field_t particle_ctrl_DescribeStorageRequest_fields[1];
extern const pb_field_t particle_ctrl_DescribeStorageReply_fields[2];
extern const pb_field_t particle_ctrl_DescribeStorageReply_Section_fields[5];
extern const pb_field_t particle_ctrl_DescribeStorageReply_Section_FirmwareModule_fields[3];
extern const pb_field_t particle_ctrl_DescribeStorageReply_Storage_fields[4];
extern const pb_field_t particle_ctrl_ReadSectionDataRequest_fields[5];
extern const pb_field_t particle_ctrl_ReadSectionDataReply_fields[2];
extern const pb_field_t particle_ctrl_WriteSectionDataRequest_fields[5];
extern const pb_field_t particle_ctrl_WriteSectionDataReply_fields[1];
extern const pb_field_t particle_ctrl_ClearSectionDataRequest_fields[3];
extern const pb_field_t particle_ctrl_ClearSectionDataReply_fields[1];
extern const pb_field_t particle_ctrl_GetSectionDataSizeRequest_fields[3];
extern const pb_field_t particle_ctrl_GetSectionDataSizeReply_fields[2];
extern const pb_field_t particle_ctrl_GetModuleInfoRequest_fields[1];
extern const pb_field_t particle_ctrl_GetModuleInfoReply_fields[2];
extern const pb_field_t particle_ctrl_GetModuleInfoReply_Dependency_fields[4];
extern const pb_field_t particle_ctrl_GetModuleInfoReply_Module_fields[7];

/* Maximum encoded size of messages (where known) */
#define particle_ctrl_StartFirmwareUpdateRequest_size 8
#define particle_ctrl_StartFirmwareUpdateReply_size 6
#define particle_ctrl_FinishFirmwareUpdateRequest_size 2
#define particle_ctrl_FinishFirmwareUpdateReply_size 0
#define particle_ctrl_CancelFirmwareUpdateRequest_size 0
#define particle_ctrl_CancelFirmwareUpdateReply_size 0
/* particle_ctrl_FirmwareUpdateDataRequest_size depends on runtime parameters */
#define particle_ctrl_FirmwareUpdateDataReply_size 0
#define particle_ctrl_DescribeStorageRequest_size 0
/* particle_ctrl_DescribeStorageReply_size depends on runtime parameters */
#define particle_ctrl_DescribeStorageReply_Section_size 24
#define particle_ctrl_DescribeStorageReply_Section_FirmwareModule_size 8
/* particle_ctrl_DescribeStorageReply_Storage_size depends on runtime parameters */
#define particle_ctrl_ReadSectionDataRequest_size 24
/* particle_ctrl_ReadSectionDataReply_size depends on runtime parameters */
/* particle_ctrl_WriteSectionDataRequest_size depends on runtime parameters */
#define particle_ctrl_WriteSectionDataReply_size 0
#define particle_ctrl_ClearSectionDataRequest_size 12
#define particle_ctrl_ClearSectionDataReply_size 0
#define particle_ctrl_GetSectionDataSizeRequest_size 12
#define particle_ctrl_GetSectionDataSizeReply_size 6
#define particle_ctrl_GetModuleInfoRequest_size  0
/* particle_ctrl_GetModuleInfoReply_size depends on runtime parameters */
#define particle_ctrl_GetModuleInfoReply_Dependency_size 14
/* particle_ctrl_GetModuleInfoReply_Module_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define STORAGE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
