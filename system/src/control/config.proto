syntax = "proto3";
package particle.ctrl;

import "common.proto";

// Note: Use the same values as defined by the security_key_type enum
enum SecurityKeyType {
  INVALID_SECURITY_KEY = 0;
  TCP_DEVICE_PRIVATE_KEY = 1;
  TCP_DEVICE_PUBLIC_KEY = 2;
  TCP_SERVER_PUBLIC_KEY = 3;
  UDP_DEVICE_PRIVATE_KEY = 4;
  UDP_DEVICE_PUBLIC_KEY = 5;
  UDP_SERVER_PUBLIC_KEY = 6;
}

// Note: Use the same values as defined by the server_protocol_type enum
enum ServerProtocolType {
  INVALID_PROTOCOL = 0;
  TCP_PROTOCOL = 1;
  UDP_PROTOCOL = 2;
}

// CTRL_REQUEST_SET_CLAIM_CODE: 200
message SetClaimCodeRequest {
  string code = 1 [(nanopb).max_size = 64]; // Claim code
}

message SetClaimCodeReply {
}

// CTRL_REQUEST_SET_SECURITY_KEY: 210
message SetSecurityKeyRequest {
  SecurityKeyType type = 1; // Key type
  bytes data = 2; // Key data in DER format
}

message SetSecurityKeyReply {
}

// CTRL_REQUEST_GET_SECURITY_KEY: 211
message GetSecurityKeyRequest {
  SecurityKeyType type = 1; // Key type
}

message GetSecurityKeyReply {
  bytes data = 1; // Key data in DER format
}

// CTRL_REQUEST_SET_SERVER_ADDRESS: 220
message SetServerAddressRequest {
  ServerProtocolType protocol = 1; // Protocol type
  string address = 2 [(nanopb).max_size = 64]; // Server address
  int32 port = 3; // Port number
}

message SetServerAddressReply {
}

// CTRL_REQUEST_GET_SERVER_ADDRESS: 221
message GetServerAddressRequest {
  ServerProtocolType protocol = 1; // Protocol type
}

message GetServerAddressReply {
  string address = 1; // Server address
  int32 port = 2; // Port number
}

// CTRL_REQUEST_SET_SERVER_PROTOCOL: 222
message SetServerProtocolRequest {
  ServerProtocolType protocol = 1; // Protocol type
}

message SetServerProtocolReply {
}

// CTRL_REQUEST_GET_SERVER_PROTOCOL: 223
message GetServerProtocolRequest {
}

message GetServerProtocolReply {
  ServerProtocolType protocol = 1; // Protocol type
}

// CTRL_REQUEST_SET_SOFTAP_SSID: 240
message SetSoftApSsidRequest {
  string prefix = 1 [(nanopb).max_size = 32];
  string suffix = 2 [(nanopb).max_size = 16];
}

message SetSoftApSsidReply {
}
